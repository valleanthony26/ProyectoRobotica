#!/usr/bin/env python2
import rospy
import actionlib
from control_msgs.msg import FollowJointTrajectoryAction,FollowJointTrajectoryGoal
import numpy as np
from trajectory_msgs.msg import JointTrajectoryPoint
from robot_functions import *


def move_to_cartesian_positions(pub, jnames, cartesian_positions, q0):
    g = FollowJointTrajectoryGoal()
    g.trajectory.joint_names = jnames

    for i, pos in enumerate(cartesian_positions):
        q = ikine(pos, q0)
        print("Moving to cartesian position {} with joint configuration {}".format(pos, q))
        point = JointTrajectoryPoint(positions=q, velocities=[0]*6, time_from_start=rospy.Duration(2.0 * (i + 1)))
        g.trajectory.points.append(point)
        q0 = q 
    pub.send_goal(g)
    pub.wait_for_result()
    rospy.sleep(5)
    


if __name__ == '__main__':

 rospy.init_node("test_gazebo", disable_signals=True)
 robot_client = actionlib.SimpleActionClient('robot_arm_controller/follow_joint_trajectory', FollowJointTrajectoryAction)
 
 print("Waiting for server...")
 robot_client.wait_for_server()
 print("Connected to server")

 # Joint names
 jnames = ['joint_1', 'joint_2', 'joint_3','joint_4', 'joint_5', 'joint_6']
 # Joint Configuration
 q0 = np.array([0, 0, 0, 0, 0, 0])

 posiciones_deseadas = [np.array([-2, 2, 2.2]),np.array([-3, -2, 2.2]),np.array([1, 1, 3.2])]

 move_to_cartesian_positions(robot_client, jnames, posiciones_deseadas, q0)





